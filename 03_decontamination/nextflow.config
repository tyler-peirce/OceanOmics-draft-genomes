resume = true

report {
    overwrite = true  // Add this line to enable report overwrite
}

profiles {

    setonix {

        process { 
            cache = 'lenient'
            stageInMode = 'symlink'
        }
        
        singularity { 
            enabled = true
            cacheDir = "$MYSOFTWARE/.nextflow_singularity"
            envWhitelist = 'SINGULARITY_BINDPATH, SINGULARITYENV_LD_LIBRARY_PATH, SINGULARITYENV_LD_PRELOAD'
        }


        process {

            withName: 'fcsgx_find'           { container =  'https://ftp.ncbi.nlm.nih.gov/genomes/TOOLS/FCS/releases/0.5.4/fcs-gx.sif' }
            withName: 'fcsgx_clean'          { container =  'https://ftp.ncbi.nlm.nih.gov/genomes/TOOLS/FCS/releases/0.5.4/fcs-gx.sif' }
            withName: 'bbmap_filter'         { container =  'quay.io/biocontainers/bbmap:39.08--h92535d8_0' }
            withName: 'find_adaptors'        { container =  'https://ftp.ncbi.nlm.nih.gov/genomes/TOOLS/FCS/releases/0.5.0/fcs-adaptor.sif' }
            withName: 'filter_adaptors'      { container =  'https://ftp.ncbi.nlm.nih.gov/genomes/TOOLS/FCS/releases/0.5.4/fcs-gx.sif' }
            withName: 'tiara_find_contam'    { container =  'quay.io/biocontainers/tiara:1.0.3' }
            withName: 'filter_tiara'         { container =  'quay.io/biocontainers/bbmap:39.08--h92535d8_0' }
        }



        
        params {
            slurm_account = 'pawsey0812'
            GXDB_LOC = "/scratch/references/Foreign_Contamination_Screening"
        }



        process {
            executor = 'slurm'
            clusterOptions = "--account=${params.slurm_account}"
            queue = 'work'

            // fcsgx is sent to high mem queue
            withName: 'fcsgx_find' {
                queue         = 'highmem'
                cpus          = { 64 }
                memory        = { 512.GB }
                time          = { 4.h }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

            withName: 'fcsgx_clean' {
                cpus          = { 2 }
                memory        = { 4.GB }
                time          = { 10.m }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

            withName: 'bbmap_filter' {
                cpus          = { 2 }
                memory        = { 4.GB }
                time          = { 10.m }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

            withName: 'find_adaptors' {
                cpus          = { 10 }
                memory        = { 20.GB }
                time          = { 60.m }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

            withName: 'filter_adaptors' {
                cpus          = { 2 }
                memory        = { 4.GB }
                time          = { 10.m }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

            withName: 'tiara_find_contam' {
                cpus          = { 12 }
                memory        = { 24.GB }
                time          = { 40.m }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

            withName: 'filter_tiara' {
                cpus          = { 2 }
                memory        = { 4.GB }
                time          = { 10.m }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

        }


        executor { 
            $slurm {
                queueSize = 1000
                pollInterval = '1 min'
                queueStatInterval = '5min'
            }
        }
    }
}
