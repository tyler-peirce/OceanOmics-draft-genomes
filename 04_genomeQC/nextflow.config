resume = true

report {
    overwrite = true
}

profiles {

    setonix {

        process { 
            cache = 'lenient'
            stageInMode = 'symlink'
        }
    
        singularity { 
            enabled = true
            cacheDir = "$MYSOFTWARE/.nextflow_singularity"
            envWhitelist = 'SINGULARITY_BINDPATH, SINGULARITYENV_LD_LIBRARY_PATH, SINGULARITYENV_LD_PRELOAD'
        }


        process {

            withName: 'busco_acti'          { container = 'docker://ezlabgva/busco:v5.4.6_cv1' }
            withName: 'compile_busco_acti'  { container =  'docker://sawtooth01/rjson:v0.1' }            
            withName: 'busco_vert'          { container = 'docker://ezlabgva/busco:v5.4.6_cv1' }
            withName: 'compile_busco_vert'  { container =  'docker://sawtooth01/rjson:v0.1' }
            withName: 'BWAMEM2_INDEX'       { container = 'quay.io/biocontainers/bwa-mem2:2.2.1--he513fc3_0' }
            withName: 'BWAMEM2_MEM_ACTI'    { container = 'quay.io/biocontainers/mulled-v2-e5d375990341c5aef3c9aff74f96f66f65375ef6:2d15960ccea84e249a150b7f5d4db3a42fc2d6c3-0' }
            withName: 'BWAMEM2_MEM_VERT'    { container = 'quay.io/biocontainers/mulled-v2-e5d375990341c5aef3c9aff74f96f66f65375ef6:2d15960ccea84e249a150b7f5d4db3a42fc2d6c3-0' }
            withName: 'merqury'             { container = 'quay.io/biocontainers/merqury:1.3--hdfd78af_1' }          
            withName: 'depthsizer'          { container =  'docker.io/sawtooth01/depthsizer:v1.8.0' } 
        }


            
        params {
            slurm_account = 'pawsey0812'
        }

        process {
            executor = 'slurm'
            clusterOptions = "--account=${params.slurm_account}"
            queue = 'work'

            withName: 'lineage' {
                cpus          = { 1 }
                memory        = { 1.GB }
                time          = { 10.m }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }    
            
            withName: 'busco_acti' {
                cpus          = { 8 }
                memory        = { 16.GB }
                time          = { 4.h }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

            withName: 'compile_busco_acti' {
                cpus          = { 1 }
                memory        = { 2.GB }
                time          = { 1.h }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

            withName: 'busco_vert' {
                cpus          = { 36 }
                memory        = { 72.GB }
                time          = { 24.h }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

            withName: 'compile_busco_vert' {
                cpus          = { 1 }
                memory        = { 2.GB }
                time          = { 1.h }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

            withName: 'BWAMEM2_INDEX' {
                cpus          = 6
                memory        = 12.GB
                time          = 20.m
                maxRetries    = 3
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }    
            
            withName: 'BWAMEM2_MEM_ACTI' {
                cpus          = 24
                memory        = { task ->
                    if (task.exitStatus == 140) {
                        if (task.attempt == 2) return 80.GB
                    }
                    return 48.GB  // Default for first attempt or non-140 retries
                }
                time          = 8.h
                maxRetries    = 2
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            } 

            withName: 'BWAMEM2_MEM_VERT' {
                cpus          = 48
                memory        = { task ->
                    if (task.exitStatus == 140) {
                        if (task.attempt == 2) return 160.GB
                        else if (task.attempt == 3) return 200.GB
                    }
                    return 96.GB  // Default for first attempt or non-140 retries
                }
                time          = 8.h
                maxRetries    = 3
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

            withName: 'merqury' {
                cpus          = { 10 }
                memory        = { 20.GB }
                time          = { 3.h }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

            withName: 'depthsizer' {
                cpus           = { 3 }
                memory         = { 6.GB }
                time           = { 30.m }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
                //errorStrategy { (task.attempt <= 3) ? 'retry' : 'finish' }
            } 
        }

        executor { 
            $slurm {
                queueSize = 1000
                pollInterval = '1 min'
                queueStatInterval = '5min'
            }
        }
    }
}
