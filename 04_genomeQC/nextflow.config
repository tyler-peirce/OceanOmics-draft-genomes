resume = true

report {
    overwrite = true
}

profiles {

    setonix {

        process { 
            cache = 'lenient'
            stageInMode = 'symlink'
        }
    
        singularity { 
            enabled = true
            cacheDir = "$MYSOFTWARE/.nextflow_singularity"
            envWhitelist = 'SINGULARITY_BINDPATH, SINGULARITYENV_LD_LIBRARY_PATH, SINGULARITYENV_LD_PRELOAD'
        }


        process {

            withName: 'busco_acti'          { container = 'docker://ezlabgva/busco:v5.4.6_cv1' }
            withName: 'busco_vert'          { container = 'docker://ezlabgva/busco:v5.4.6_cv1' }
            withName: 'bwa_align_acti'      { container = 'quay.io/hdc-workflows/bwa-samtools:93deeda' }
            withName: 'bwa_align_vert'      { container = 'quay.io/hdc-workflows/bwa-samtools:93deeda' }
            withName: 'merqury'             { container = 'quay.io/biocontainers/merqury:1.3--hdfd78af_1' }
            withName: 'compile_busco_acti'  { container =  'docker://sawtooth01/rjson:v0.1' }
            withName: 'compile_busco_vert'  { container =  'docker://sawtooth01/rjson:v0.1' }
            withName: 'depthsizer'          { container =  'docker.io/sawtooth01/depthsizer:v1.8.0' } 
        }


            
        params {
            slurm_account = 'pawsey0812'
        }

        process {
            executor = 'slurm'
            clusterOptions = "--account=${params.slurm_account}"
            queue = 'work'



            withName: 'lineage' {
                cpus          = { 1 }
                memory        = { 1.GB }
                time          = { 10.m }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }    
            
            withName: 'busco_acti' {
                cpus          = { 8 }
                memory        = { 30.GB }
                time          = { 10.h }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

            withName: 'compile_busco_acti' {
                cpus          = { 1 }
                memory        = { 2.GB }
                time          = { 1.h }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

            withName: 'busco_vert' {
                cpus          = { 16 }
                memory        = { 200.GB }
                time          = { 24.h }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

            withName: 'compile_busco_vert' {
                cpus          = { 1 }
                memory        = { 2.GB }
                time          = { 1.h }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

            withName: 'bwa_align_acti' {
                cpus          = 24
                memory        = 80.GB
                time          = 10.h
                maxRetries    = 3
                
                errorStrategy = { task ->
                    if (task.exitStatus in [143,137,104,134,139,247]) {
                        return 'retry'
                    } else if (task.exitStatus == 140) {
                        return 'retry'
                    } else {
                        return 'terminate'
                    }
                }

                memory = { task ->
                    if (task.exitStatus == 140) {
                        if (task.attempt == 2) return 160.GB
                        else if (task.attempt == 3) return 220.GB
                    }
                    return 80.GB  // Default for first attempt or non-140 retries
                }

                cpus = { task ->
                    task.exitStatus == 140 && task.attempt > 1 ? 12 : 6
                }

                time = { task ->
                    if (task.exitStatus == 140) {
                        if (task.attempt == 2) return 16.hour
                        else if (task.attempt == 3) return 20.hour
                    }
                    return 10.hour  // Default for first attempt or non-140 retries
                }
            }
        

            withName: 'merqury' {
                cpus          = { 6 }
                memory        = { 20.GB }
                time          = { 5.h }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }

            withName: 'depthsizer' {
                cpus           = { 8 }
                memory         = { 180.GB }
                time           = { 8.h }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
                //errorStrategy { (task.attempt <= 3) ? 'retry' : 'finish' }
            }

            // Special queue for long jobs
            withName: 'bwa_align_vert' {
                queue         = 'long'
                cpus          = { 12 }
                memory        = { 200.GB }
                time          = { 48.h }
                errorStrategy = { task.exitStatus in [143,137,104,134,139,247] ? 'retry' : 'finish' }
            }   
        }

        executor { 
            $slurm {
                queueSize = 1000
                pollInterval = '1 min'
                queueStatInterval = '5min'
            }
        }
    }
}
